// <auto-generated />
using System;
using DatabaseMsiTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseMsiTest.Migrations
{
    [DbContext(typeof(WeatherContext))]
    partial class WeatherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseMsiTest.WeatherForecast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("189a072c-2774-4181-bccf-142a063b6ec8"),
                            Date = new DateTime(2020, 7, 28, 22, 14, 11, 886, DateTimeKind.Local).AddTicks(4085),
                            Summary = "Freezing",
                            TemperatureC = 10
                        },
                        new
                        {
                            Id = new Guid("6ff28f3a-fd45-4a5a-a82f-0b4e73c2127f"),
                            Date = new DateTime(2020, 7, 29, 22, 14, 11, 889, DateTimeKind.Local).AddTicks(9699),
                            Summary = "Bracing",
                            TemperatureC = 20
                        },
                        new
                        {
                            Id = new Guid("7bfe2d43-048f-468e-8c69-2d8c96e3e0b6"),
                            Date = new DateTime(2020, 7, 30, 22, 14, 11, 889, DateTimeKind.Local).AddTicks(9766),
                            Summary = "Chilly",
                            TemperatureC = 30
                        },
                        new
                        {
                            Id = new Guid("83526076-b3d6-4c5d-808f-d9620c8c90f4"),
                            Date = new DateTime(2020, 7, 31, 22, 14, 11, 889, DateTimeKind.Local).AddTicks(9784),
                            Summary = "Cool",
                            TemperatureC = 40
                        },
                        new
                        {
                            Id = new Guid("e54d2ebe-ab19-463f-909e-2894cd2a15e1"),
                            Date = new DateTime(2020, 8, 1, 22, 14, 11, 889, DateTimeKind.Local).AddTicks(9800),
                            Summary = "Mild",
                            TemperatureC = 50
                        },
                        new
                        {
                            Id = new Guid("91c7025f-f666-4d5e-b64e-b1053401e53f"),
                            Date = new DateTime(2020, 8, 2, 22, 14, 11, 889, DateTimeKind.Local).AddTicks(9816),
                            Summary = "Warm",
                            TemperatureC = 60
                        },
                        new
                        {
                            Id = new Guid("a466c1f3-b6b2-4478-bf05-ac4df7dba1bc"),
                            Date = new DateTime(2020, 8, 3, 22, 14, 11, 889, DateTimeKind.Local).AddTicks(9831),
                            Summary = "Balmy",
                            TemperatureC = 70
                        },
                        new
                        {
                            Id = new Guid("80d733e4-651d-45c4-99b8-1b537edac925"),
                            Date = new DateTime(2020, 8, 4, 22, 14, 11, 889, DateTimeKind.Local).AddTicks(9847),
                            Summary = "Hot",
                            TemperatureC = 80
                        },
                        new
                        {
                            Id = new Guid("c8cdd6a4-6402-4ca7-9c11-17dc5e941793"),
                            Date = new DateTime(2020, 8, 5, 22, 14, 11, 889, DateTimeKind.Local).AddTicks(9863),
                            Summary = "Sweltering",
                            TemperatureC = 90
                        },
                        new
                        {
                            Id = new Guid("16e7f670-840c-4758-a796-2927fa253cc3"),
                            Date = new DateTime(2020, 8, 6, 22, 14, 11, 889, DateTimeKind.Local).AddTicks(9878),
                            Summary = "Scorching",
                            TemperatureC = 100
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
